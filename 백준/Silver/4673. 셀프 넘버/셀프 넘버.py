# 4673 셀프 넘버
# 양의 정수 n이 주어졌을 때, 이 수를 시작해서 n, d(n), d(d(n)), d(d(d(n))), ...과 같은 무한 수열을 만들 수 있다. 
# 예를 들어, 33으로 시작한다면 다음 수는 33 + 3 + 3 = 39이고, -> 39의 생성자 33
# 그 다음 수는 39 + 3 + 9 = 51, 다음 수는 51 + 5 + 1 = 57이다.  -> 57의 생성자 51
# n을 d(n)의 생성자라고 한다.

def d(n): #d(n) 함수
  # 생성자 n을 사용해서 d(n)을 만드는 수식
  n = n + sum(map(int, str(n))) # n에 n을 str화 하여 int로 나눈 뒤, sum해준 값을 더해준다
  # ex. n = 55라면, 55 + ( 5 + 5 ) 의 연산 결과를 n에 넣어준 뒤 리턴
  return n # 즉, 생성자가 있는 숫자들이 리턴된다.

# 셀프 넘버(생성자가 없는 수)가 아닌 수 들(생성자가 있는 수)이 들어갈 빈 집합 생성
nonSelfNum = set()

# nonSelfNum에 들어갈 수를 찾아서 집합 안에 넣어준다.
for i in range(1, 10001):
   nonSelfNum.add( d(i) ) # 1 ~ 10000 까지 반복하며 생성자가 있는 숫자를 nonSelfNum 집합에 넣어준다.

for j in range(1, 10001): # 위와 동일하게 1 ~ 10000 까지 반복하는 j 생성
  if j not in nonSelfNum: # 0부터 시작하여 10000까지 도는 j가 생성자가 있는 수의 집합에 들어있지 않다면
    print(j) # 출력한다.